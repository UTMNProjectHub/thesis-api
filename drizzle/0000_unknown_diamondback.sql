CREATE SCHEMA "thesis";
--> statement-breakpoint
CREATE TABLE "thesis"."chosen_variants" (
	"id" uuid PRIMARY KEY NOT NULL,
	"userId" uuid NOT NULL,
	"quizId" uuid NOT NULL,
	"questionId" uuid NOT NULL,
	"chosenId" uuid NOT NULL
);
--> statement-breakpoint
CREATE TABLE "thesis"."files" (
	"id" uuid PRIMARY KEY NOT NULL,
	"name" varchar NOT NULL,
	"s3Index" varchar NOT NULL,
	"userId" uuid
);
--> statement-breakpoint
CREATE TABLE "thesis"."permissions" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "thesis"."permissions_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"title" varchar,
	"slug" varchar,
	"description" varchar,
	"date_created" timestamp,
	CONSTRAINT "permissions_slug_unique" UNIQUE("slug")
);
--> statement-breakpoint
CREATE TABLE "thesis"."questions" (
	"id" uuid PRIMARY KEY NOT NULL,
	"type" varchar NOT NULL,
	"text" text NOT NULL
);
--> statement-breakpoint
CREATE TABLE "thesis"."questions_variants" (
	"id" uuid PRIMARY KEY NOT NULL,
	"questionId" uuid NOT NULL,
	"variantId" uuid NOT NULL,
	"isRight" boolean NOT NULL
);
--> statement-breakpoint
CREATE TABLE "thesis"."quizes" (
	"id" uuid PRIMARY KEY NOT NULL,
	"type" varchar NOT NULL,
	"name" varchar NOT NULL,
	"description" text NOT NULL,
	"themeId" integer
);
--> statement-breakpoint
CREATE TABLE "thesis"."quizes_questions" (
	"id" uuid PRIMARY KEY NOT NULL,
	"quizId" uuid NOT NULL,
	"questionId" uuid NOT NULL
);
--> statement-breakpoint
CREATE TABLE "thesis"."references_question" (
	"id" uuid PRIMARY KEY NOT NULL,
	"questionId" uuid NOT NULL,
	"fileId" uuid NOT NULL
);
--> statement-breakpoint
CREATE TABLE "thesis"."references_quiz" (
	"id" uuid PRIMARY KEY NOT NULL,
	"quizId" uuid NOT NULL,
	"fileId" uuid NOT NULL,
	"userId" uuid NOT NULL
);
--> statement-breakpoint
CREATE TABLE "thesis"."references_subject" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "thesis"."references_subject_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"subjectId" integer,
	"fileId" uuid
);
--> statement-breakpoint
CREATE TABLE "thesis"."references_theme" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "thesis"."references_theme_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"themeId" integer NOT NULL,
	"fileId" uuid NOT NULL
);
--> statement-breakpoint
CREATE TABLE "thesis"."roles" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "thesis"."roles_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"title" varchar NOT NULL,
	"slug" varchar NOT NULL,
	"description" varchar,
	"date_created" timestamp,
	CONSTRAINT "roles_slug_unique" UNIQUE("slug")
);
--> statement-breakpoint
CREATE TABLE "thesis"."roles_permissions" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "thesis"."roles_permissions_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"roleId" integer NOT NULL,
	"permissionId" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE "thesis"."subjects" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "thesis"."subjects_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar NOT NULL,
	"shortName" varchar NOT NULL,
	"description" text NOT NULL
);
--> statement-breakpoint
CREATE TABLE "thesis"."themes" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "thesis"."themes_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar NOT NULL,
	"description" text NOT NULL,
	"subjectId" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE "thesis"."users" (
	"id" uuid PRIMARY KEY NOT NULL,
	"email" varchar NOT NULL,
	"full_name" varchar,
	"avatar_url" varchar,
	"password" varchar NOT NULL,
	"date_created" timestamp NOT NULL,
	CONSTRAINT "users_email_unique" UNIQUE("email")
);
--> statement-breakpoint
CREATE TABLE "thesis"."users_quizes" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "thesis"."users_quizes_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"userId" uuid NOT NULL,
	"quizId" uuid NOT NULL
);
--> statement-breakpoint
CREATE TABLE "thesis"."users_roles" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "thesis"."users_roles_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"userId" uuid NOT NULL,
	"roleId" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE "thesis"."variants" (
	"id" uuid PRIMARY KEY NOT NULL,
	"text" text NOT NULL,
	"explainRight" text NOT NULL,
	"explainWrong" text NOT NULL
);
--> statement-breakpoint
ALTER TABLE "thesis"."chosen_variants" ADD CONSTRAINT "chosen_variants_userId_users_id_fk" FOREIGN KEY ("userId") REFERENCES "thesis"."users"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."chosen_variants" ADD CONSTRAINT "chosen_variants_quizId_quizes_id_fk" FOREIGN KEY ("quizId") REFERENCES "thesis"."quizes"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."chosen_variants" ADD CONSTRAINT "chosen_variants_questionId_questions_id_fk" FOREIGN KEY ("questionId") REFERENCES "thesis"."questions"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."chosen_variants" ADD CONSTRAINT "chosen_variants_chosenId_questions_variants_id_fk" FOREIGN KEY ("chosenId") REFERENCES "thesis"."questions_variants"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."files" ADD CONSTRAINT "files_userId_users_id_fk" FOREIGN KEY ("userId") REFERENCES "thesis"."users"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."questions_variants" ADD CONSTRAINT "questions_variants_questionId_questions_id_fk" FOREIGN KEY ("questionId") REFERENCES "thesis"."questions"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."questions_variants" ADD CONSTRAINT "questions_variants_variantId_variants_id_fk" FOREIGN KEY ("variantId") REFERENCES "thesis"."variants"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."quizes" ADD CONSTRAINT "quizes_themeId_themes_id_fk" FOREIGN KEY ("themeId") REFERENCES "thesis"."themes"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."quizes_questions" ADD CONSTRAINT "quizes_questions_quizId_quizes_id_fk" FOREIGN KEY ("quizId") REFERENCES "thesis"."quizes"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."quizes_questions" ADD CONSTRAINT "quizes_questions_questionId_questions_id_fk" FOREIGN KEY ("questionId") REFERENCES "thesis"."questions"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."references_question" ADD CONSTRAINT "references_question_questionId_questions_id_fk" FOREIGN KEY ("questionId") REFERENCES "thesis"."questions"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."references_question" ADD CONSTRAINT "references_question_fileId_files_id_fk" FOREIGN KEY ("fileId") REFERENCES "thesis"."files"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."references_quiz" ADD CONSTRAINT "references_quiz_quizId_quizes_id_fk" FOREIGN KEY ("quizId") REFERENCES "thesis"."quizes"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."references_quiz" ADD CONSTRAINT "references_quiz_fileId_files_id_fk" FOREIGN KEY ("fileId") REFERENCES "thesis"."files"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."references_quiz" ADD CONSTRAINT "references_quiz_userId_users_id_fk" FOREIGN KEY ("userId") REFERENCES "thesis"."users"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."references_subject" ADD CONSTRAINT "references_subject_subjectId_subjects_id_fk" FOREIGN KEY ("subjectId") REFERENCES "thesis"."subjects"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."references_subject" ADD CONSTRAINT "references_subject_fileId_files_id_fk" FOREIGN KEY ("fileId") REFERENCES "thesis"."files"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."references_theme" ADD CONSTRAINT "references_theme_themeId_themes_id_fk" FOREIGN KEY ("themeId") REFERENCES "thesis"."themes"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."references_theme" ADD CONSTRAINT "references_theme_fileId_files_id_fk" FOREIGN KEY ("fileId") REFERENCES "thesis"."files"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."roles_permissions" ADD CONSTRAINT "roles_permissions_roleId_roles_id_fk" FOREIGN KEY ("roleId") REFERENCES "thesis"."roles"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "thesis"."roles_permissions" ADD CONSTRAINT "roles_permissions_permissionId_permissions_id_fk" FOREIGN KEY ("permissionId") REFERENCES "thesis"."permissions"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "thesis"."themes" ADD CONSTRAINT "themes_subjectId_subjects_id_fk" FOREIGN KEY ("subjectId") REFERENCES "thesis"."subjects"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."users_quizes" ADD CONSTRAINT "users_quizes_userId_users_id_fk" FOREIGN KEY ("userId") REFERENCES "thesis"."users"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."users_quizes" ADD CONSTRAINT "users_quizes_quizId_quizes_id_fk" FOREIGN KEY ("quizId") REFERENCES "thesis"."quizes"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "thesis"."users_roles" ADD CONSTRAINT "users_roles_userId_users_id_fk" FOREIGN KEY ("userId") REFERENCES "thesis"."users"("id") ON DELETE cascade ON UPDATE cascade;--> statement-breakpoint
ALTER TABLE "thesis"."users_roles" ADD CONSTRAINT "users_roles_roleId_roles_id_fk" FOREIGN KEY ("roleId") REFERENCES "thesis"."roles"("id") ON DELETE cascade ON UPDATE cascade;